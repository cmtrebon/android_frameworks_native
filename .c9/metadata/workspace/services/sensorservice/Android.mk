{"filter":false,"title":"Android.mk","tooltip":"/services/sensorservice/Android.mk","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":55,"column":0},"action":"remove","lines":["LOCAL_PATH:= $(call my-dir)","include $(CLEAR_VARS)","","LOCAL_SRC_FILES:= \\","\tBatteryService.cpp \\","\tCorrectedGyroSensor.cpp \\","    Fusion.cpp \\","    GravitySensor.cpp \\","    LinearAccelerationSensor.cpp \\","    OrientationSensor.cpp \\","    RotationVectorSensor.cpp \\","    SensorDevice.cpp \\","    SensorFusion.cpp \\","    SensorInterface.cpp \\","    SensorService.cpp","","LOCAL_CFLAGS:= -DLOG_TAG=\\\"SensorService\\\"","","LOCAL_CFLAGS += -fvisibility=hidden","","LOCAL_SHARED_LIBRARIES := \\","\tlibcutils \\","\tlibhardware \\","\tlibhardware_legacy \\","\tlibutils \\","\tliblog \\","\tlibbinder \\","\tlibui \\","\tlibgui","","ifneq ($(BOARD_SYSFS_LIGHT_SENSOR),)","    LOCAL_CFLAGS += -DSYSFS_LIGHT_SENSOR=\\\"$(BOARD_SYSFS_LIGHT_SENSOR)\\\"","endif","","LOCAL_MODULE:= libsensorservice","","include $(BUILD_SHARED_LIBRARY)","","#####################################################################","# build executable","include $(CLEAR_VARS)","","LOCAL_SRC_FILES:= \\","\tmain_sensorservice.cpp","","LOCAL_SHARED_LIBRARIES := \\","\tlibsensorservice \\","\tlibbinder \\","\tlibutils","","LOCAL_MODULE_TAGS := optional","","LOCAL_MODULE:= sensorservice","","include $(BUILD_EXECUTABLE)",""]},{"start":{"row":0,"column":0},"end":{"row":68,"column":27},"action":"insert","lines":["LOCAL_PATH:= $(call my-dir)","include $(CLEAR_VARS)","","LOCAL_SRC_FILES:= \\","\tBatteryService.cpp \\","\tCorrectedGyroSensor.cpp \\","    Fusion.cpp \\","    GravitySensor.cpp \\","    LinearAccelerationSensor.cpp \\","    OrientationSensor.cpp \\","    RotationVectorSensor.cpp \\","    SensorDevice.cpp \\","    SensorFusion.cpp \\","    SensorInterface.cpp \\","    SensorService.cpp","","ifeq ($(BOARD_USE_LEGACY_SENSORS_FUSION),true)","# Legacy virtual sensors used in combination from accelerometer & magnetometer.","LOCAL_SRC_FILES += \\","\tlegacy/SecondOrderLowPassFilter.cpp \\","\tlegacy/LegacyGravitySensor.cpp \\","\tlegacy/LegacyLinearAccelerationSensor.cpp \\","\tlegacy/LegacyOrientationSensor.cpp \\","\tlegacy/LegacyRotationVectorSensor.cpp","endif","","LOCAL_CFLAGS:= -DLOG_TAG=\\\"SensorService\\\"","","LOCAL_CFLAGS += -fvisibility=hidden","","LOCAL_SHARED_LIBRARIES := \\","\tlibcutils \\","\tlibhardware \\","\tlibhardware_legacy \\","\tlibutils \\","\tliblog \\","\tlibbinder \\","\tlibui \\","\tlibgui","","ifeq ($(BOARD_USE_LEGACY_SENSORS_FUSION),true)","    LOCAL_CFLAGS += -DUSE_LEGACY_SENSORS_FUSION","endif","","ifneq ($(BOARD_SYSFS_LIGHT_SENSOR),)","    LOCAL_CFLAGS += -DSYSFS_LIGHT_SENSOR=\\\"$(BOARD_SYSFS_LIGHT_SENSOR)\\\"","endif","","LOCAL_MODULE:= libsensorservice","","include $(BUILD_SHARED_LIBRARY)","","#####################################################################","# build executable","include $(CLEAR_VARS)","","LOCAL_SRC_FILES:= \\","\tmain_sensorservice.cpp","","LOCAL_SHARED_LIBRARIES := \\","\tlibsensorservice \\","\tlibbinder \\","\tlibutils","","LOCAL_MODULE_TAGS := optional","","LOCAL_MODULE:= sensorservice","","include $(BUILD_EXECUTABLE)"]}]}]]},"ace":{"folds":[],"scrolltop":352,"scrollleft":0,"selection":{"start":{"row":68,"column":27},"end":{"row":68,"column":27},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":21,"state":"start","mode":"ace/mode/text"}},"timestamp":1419908438844,"hash":"01e3e850453422230f46d5166f37bae5081f5164"}